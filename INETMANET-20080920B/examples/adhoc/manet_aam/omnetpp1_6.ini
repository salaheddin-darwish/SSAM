[General]
#debug-on-errors = true
cmdenv-event-banner-details = true
cmdenv-express-mode = true
cmdenv-interactive = false
cmdenv-message-trace = true


eventlog-file = ${resultdir}/${configname}-${runnumber}.elog
eventlog-message-detail-pattern = CommonAAM
eventlog-recording-intervals = 0..100
num-rngs = 1

#repeat =2 
repeat =  30

#seed-set = 0
#seed-0-mt = 0

sim-time-limit = 850s #1800s  # 10 mintues

network = inet.examples.adhoc.manet_aam.Net_Manet_AAM_Temp


tkenv-plugin-path = ../../../Etc/plugins
#tkenv-default-run = 2

description = "MANETs AAM Model Test"

#total-stack = 131072KB

#**.module-eventlog-recording = false 

**.module-eventlog-recording = false
**.scenarioManager.script = xmldoc("empty.xml")

record-eventlog = false
**.param-record-as-scalar = false
**.vector-record-eventnumbers = false


*.playgroundSizeX = 1500 #250#1000
*.playgroundSizeY = 1500#250#1000

*.numHosts = 100 #49 #100  #64 #3
*.numManagers = 1

**.debug = true
**.coreDebug = false
**.channelNumber = 0


# channel physical parameters
*.channelcontrol.carrierFrequency = 2.4GHz
*.channelcontrol.pMax = 1.0mW
*.channelcontrol.sat = -85dBm
*.channelcontrol.alpha = 2
*.channelcontrol.numChannels = 1

*.AAMDynamicConfigurator.BronzeCertP = 0.50
*.AAMDynamicConfigurator.SilverCertP = 0.30
*.AAMDynamicConfigurator.GoldenCertP = 0.20
*.AAMDynamicConfigurator.CorCertP = 0.0

*.AAMDynamicConfigurator.ActivateDeleteNode = false
*.AAMDynamicConfigurator.DeleteRate = 0.9


#**.userhost[*].udpApp[*].scalar-recording = true
#**.userhost[*].udpApp[*].vector-recording = true
#**.AuthNMAN[*].udpApp[*].scalar-recording = true
#**.AuthNMAN[*].udpApp[*].vector-recording = true
#
#**.**.**.vector-recording = false
#**.**.**.scalar-recording = false 


# 

##############################################################################
#       Application and Transport Protocols                 
#	
##############################################################################

##########################################   udp apps (on EchoApp) #######################



#**.userhost[*].numUdpApps = 1
#**.userhost[0].numUdpApps = 1
#**.AuthNMAN[*].numUdpApps=1

#**.AuthNMAN[*].udpAppType = "UDPEchoApp"
#
#**.AuthNMAN[*].udpApp[*].messageFreq = 0s
#**.AuthNMAN[*].udpApp[*].messageLength = 5B  # 
#**.AuthNMAN[*].udpApp[*].destPort = 0
#**.AuthNMAN[*].udpApp[*].destAddresses = ""
#**.AuthNMAN[*].udpApp[*].localPort = 1000
#
#
#**.userhost[*].udpAppType = "UDPEchoApp"
##**.host[*].udpApp[0].destAddresses = "random(inet.nodes.adhoc.MobileManetRoutingHost)"
#
#**.userhost[*].udpApp[*].destAddresses = "AuthNMAN[0]" 
#**.userhost[*].udpApp[0].localPort = 1234
#**.userhost[*].udpApp[0].destPort = 1000
#
#**.userhost[*].udpApp[0].messageLength = 1024B  # 
#**.userhost[*].udpApp[0].messageFreq =  1s500


#**.userhost[*].mobility.x = 100 
#**.userhost[*].mobility.y = 100 


#**.AuthNMAN[*].mobility.x = 500 #625 #500 #0
#**.AuthNMAN[*].mobility.y = 500 #125 #500 #300

**.AuthNMAN[0].mobility.x = 5 #749
**.AuthNMAN[0].mobility.y = 5 #749

#**.AuthNMAN[1].mobility.x = 244
#**.AuthNMAN[1].mobility.y = 0
#
#**.AuthNMAN[2].mobility.x = 0
#**.AuthNMAN[2].mobility.y = 244
#
#**.AuthNMAN[3].mobility.x = 125
#**.AuthNMAN[3].mobility.y = 125


#
#**.userhost[0].mobility.x = 150 #300
#**.userhost[0].mobility.y = 300 #0
#
#**.userhost[1].mobility.x = 300
#**.userhost[1].mobility.y = 300
#
#**.userhost[2].mobility.x = 450
#**.userhost[2].mobility.y = 300
#
#**.userhost[3].mobility.x = 600
#**.userhost[3].mobility.y = 300
#
#**.userhost[4].mobility.x = 750
#**.userhost[4].mobility.y = 300

#**.AuthNMAN[0].mobility.x = 500 #0
#**.AuthNMAN[0].mobility.y= 500 #300
#
#**.AuthNMAN[1].mobility.x = 250 #0
#**.AuthNMAN[1].mobility.y= 250 #300
#
#**.AuthNMAN[2].mobility.x = 750 #0
#**.AuthNMAN[2].mobility.y= 250 #300
#
#**.AuthNMAN[3].mobility.x = 250 #0
#**.AuthNMAN[3].mobility.y= 750 #300
#
#**.AuthNMAN[4].mobility.x = 750 #0
#**.AuthNMAN[4].mobility.y= 750 #300

##########################################   udp apps (Authentication Process) #######################

**.userhost[*].numUdpApps = 1
**.AuthNMAN[*].numUdpApps=1


**.userhost[*].udpApp[*].EnabledMigr = false #true
**.userhost[*].udpApp[*].WaitingWindowEnable = false

**.userhost[*].udpAppType = "AuthNAgent"
**.userhost[*].udpApp[*].AuthNMANAddr = "AuthNMAN[0]"  #"Broadcast" 
**.userhost[*].udpApp[*].AuthNMANThreAddr = "AuthNMAN[1] AuthNMAN[2] AuthNMAN[3]" 

**.userhost[*].udpApp[*].localAuthnAgentPort = 9999
**.userhost[*].udpApp[*].AuthnManPort = 3088

**.userhost[*].udpApp[*].time_begin = 0.05s #uniform(200s, 500s) # 500s
**.userhost[*].udpApp[*].messageLength = 1300B #2048B # size of Request having memebership identity certificate 

**.userhost[*].udpApp[*].GeneratorSeed = 0 # uniform(0,3)
**.userhost[*].udpApp[*].AWaitInterval = 2s #uniform(30s, 60s) #uniform(1s, 3s)
 

**.userhost[*].udpApp[*].SrvTypeOptions = 1 #  1: RootServer 2: Threshold Server 3: Root && Threshold
**.userhost[*].udpApp[*].AuthenticationType = 1 # 1:One , 2:Two, 3:Three Way Pass Authentication
**.userhost[*].udpApp[*].ThresholdServer = 2 # Number of Servers required thier reply to create Attribute Certificate
**.userhost[*].udpApp[*].TotalNumServers = 4
  
**.AuthNMAN*.udpAppType = "AuthNManager"
**.AuthNMAN*.udpApp[*].verifyingTime =  uniform(1s,3s) #uniform(0.01s, 0.03s)
**.AuthNMAN*.udpApp[*].localAuthnManPort = 3088
**.AuthNMAN[*].udpApp[*].MaxThreads = 1

**.AuthNMAN[*].udpApp[*].SrvTypeOptions = 1 #3 #  1: RootServer 2: Threshold Server 3: Root && Threshold
**.AuthNMAN[0].udpApp[*].AuthorityServerType = 1
**.AuthNMAN[*].udpApp[*].AuthorityServerType = 2 # 1:RootAuthority , 2:Threshold Authority , Threshold and Delegated Authority




##########################################   udp apps (on Video Streaming) #######################

#**.userhost[0].udpAppType = "UDPVideoStreamCli"
#**.userhost[0].udpApp[*].serverAddress = "AuthNMAN[0]"
#**.userhost[0].udpApp[*].localPort = 9999
#**.userhost[0].udpApp[*].serverPort = 3088
#**.userhost[0].udpApp[*].startTime = uniform(5s, 5.01s)
#
#**.AuthNMAN*.udpAppType = "UDPVideoStreamSvr"
#**.AuthNMAN*.udpApp[*].videoSize = 10MB
#**.AuthNMAN*.udpApp[*].serverPort = 3088
#**.AuthNMAN*.udpApp[*].waitInterval = 10ms
#**.AuthNMAN*.udpApp[*].packetLen = 1000B


##########################################   udp apps (on Telnet) #######################

#**.userhost[0].numTcpApps = 1
#**.AuthNMAN**.numTcpApps = 1
#
#
#**.userhost[0].tcpAppType = "TelnetApp"
#**.userhost[0].tcpApp[0].connectAddress ="AuthNMAN[0]" 
#**.userhost[0].tcpApp[0].startTime = uniform(0.01s,0.1s)
#**.userhost[0].tcpApp[0].messageFreq = 0.02s
#**.userhost[0].tcpApp[0].port= 1234
#**.userhost[0].tcpApp[0].connectPort= 1000
#
#**.AuthNMAN**.tcpAppType = "TCPSinkApp"
#**.AuthNMAN**.tcpApp[0].port= 1000


##########################################  tcp apps HTTP  ############################
#**.userhost[0].numTcpApps = 0
#**.userhost[0].tcpAppType = "TCPBasicClientApp"
#**.userhost[0].tcpApp[0].address = ""
#**.userhost[0].tcpApp[0].port = -1
#**.userhost[0].tcpApp[0].connectAddress = "srv"
#**.userhost[0].tcpApp[0].connectPort = 80
#
#**.userhost[0].tcpApp[0].startTime = exponential(5s)
#**.userhost[0].tcpApp[0].numRequestsPerSession = 1
#**.userhost[0].tcpApp[0].requestLength = truncnormal(350B,20B)
#**.userhost[0].tcpApp[0].replyLength = exponential(2000B)
#**.userhost[0].tcpApp[0].thinkTime = truncnormal(2s,3s)
#**.userhost[0].tcpApp[0].idleInterval = truncnormal(3600s,1200s)
#**.userhost[0].tcpApp[0].reconnectInterval = 30s
#
#**.AuthNMAN*.numTcpApps = 0
#**.AuthNMAN*.tcpAppType = "TCPGenericSrvApp"
## Another choice of server app (it does the same as TCPGenericSrvApp):
##  **.AuthNMAN*.tcpAppType="TCPSrvHostApp"
##  **.AuthNMAN*.tcpApp[0].serverThreadClass="TCPGenericSrvThread"
#**.AuthNMAN*.tcpApp[0].address = ""
#**.AuthNMAN*.tcpApp[0].port = 80
#**.AuthNMAN*.tcpApp[0].replyDelay = 0

############################ (tcp on File Transfer)##########

#   This ini file runs a a different application on the same network, NClients.
# It models large file transfers, using TCPSessionApp+TCPSinkApp.
#**.userhost[].numTcpApps = 1
#**.userhost[0].tcpAppType = "TCPSessionApp"
#**.userhost.tcpApp[0].active = true
#**.userhost.tcpApp[0].address = ""
#**.userhost.tcpApp[0].port = -1
#**.userhost.tcpApp[0].connectAddress = "srv"
#**.userhost.tcpApp[0].connectPort = 1000
#**.userhost.tcpApp[0].tOpen = exponential(0.1s)
#**.userhost.tcpApp[0].tSend = 0
#**.userhost.tcpApp[0].sendBytes = 1MB
#**.userhost.tcpApp[0].sendScript = ""
#**.userhost.tcpApp[0].tClose = 0
#
#**.AuthNMAN*.tcpAppType = "TCPSinkApp"
#**.AuthNMAN*.tcpApp[0].address = ""
#**.AuthNMAN*.tcpApp[0].port = 1000

# ping app (host[0] pinged by others)
# ping app (off)
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56B
**.pingApp.interval = 1s
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.stopTime = 0
**.pingApp.printPing = true

#*.fixhost[0].pingApp.destAddr = ""
#*.host[*].pingApp.destAddr = "fixhost[0]"
#**.pingApp.srcAddr = ""
#**.pingApp.packetSize = 56
#**.pingApp.interval = 1
#**.pingApp.hopLimit = 32
#**.pingApp.count = 0
#**.pingApp.startTime = uniform(1,5)
#**.pingApp.stopTime = 0
#**.pingApp.printPing = true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true

# ip settings
**.routingFile = ""
**.ip.procDelay = 10us
**.ip.forceBroadcast = true
# **.IPForward = false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
#**.networklayer.proxyARP = true  # Host's is hardwired "false"




# nic settings
#**.wlan.mgmt.frameCapacity = 10
#**.wlan.mgmt.Willingness = 3
#**.wlan.mgmt.Hello_ival = 2
#**.wlan.mgmt.Tc_ival = 5
#**.wlan.mgmt.Mid_ival = 5
#**.wlan.mgmt.use_mac = false



# nic settings
**.wlan.mgmt.frameCapacity = 10
**.wlan.mac.address = "auto"
**.wlan.mac.maxQueueSize = 14
**.wlan.mac.rtsThresholdBytes = 3000B
**.wlan.mac.bitrate = 54Mbps
**.wlan.mac.basicBitrate = 6Mbps  # 24Mbps
**.wlan.mac.retryLimit = 7
**.wlan.mac.cwMinData = 31
**.wlan.mac.cwMinBroadcast = 31
**.wlan.mac.opMode = 2 # 802.11g
**.wlan.mac.slotTime = 9us #
**.wlan.mac.AIFSN = 2 #DIFS


**.wlan.radio.transmitterPower = 1.0mW
**.wlan.radio.pathLossAlpha = 2
**.wlan.radio.snirThreshold = 4dB  # in dB
**.wlan.radio.bitrate = 54Mbps 		
**.wlan.radio.thermalNoise = -110dBm
**.wlan.radio.sensitivity = -90dBm  # -82  	
**.wlan.radio.phyOpMode = 2 #1/2  802.11b/802.11g-only
**.wlan.radio.channelModel = 1 #1/2  rayleigh/awgn
**.wlan.radio.berTableFile = "per_table_80211g_Trivellato.dat"




# mA for power consumption for radio 

#**.wlan.radio.usage_radio_send  = 22mA 
#**.wlan.radio.usage_radio_recv  = 7mA 
#**.wlan.radio.usage_radio_idle  = 5mA 
#**.wlan.radio.usage_radio_sleep = 0.1mA


**.wlan.radio.usage_radio_send  = 660mA 
**.wlan.radio.usage_radio_recv  = 395mA 
**.wlan.radio.usage_radio_idle  = 296mA 
**.wlan.radio.usage_radio_sleep = 100mA

##############################################################################
#       Parameters for the Energy Model (units: mAh and mA)                  #
##############################################################################
#**.battery.nominal =  uniform(0.1,10)
#**.battery.capacity = uniform(0.1,10)

**.battery.nominal =  100
**.battery.capacity = 98

**.battery.voltage = 20
**.battery.resolution = 0.5s
**.battery.publishDelta = 0.5
**.battery.publishTime = 1s
**.battery.ConsumedVector= true
#**.battery.scalar-recording = true

##############################################################################
#       Parameters for the Energy Model (units: mAh and mA)                  #
#	Calibrated according to CC2420 radio
##############################################################################
#**.battery.batteryCapacity			 = 25	#[mAh]
#**.battery.meanTimeToFailure		 = -1s
#**.battery.usage_radio_idle			 = 0.37mA	#[mA] 1.38 for CC1000
#**.battery.usage_radio_recv			 = 19.47mA	#[mA] 9.6 for CC1000
#**.battery.usage_radio_sleep		 = 0.02mA	#[mA] 0.06 for CC1000
#**.battery.transmitterPower			 = 1.0mW	#[mW]
#**.battery.usageCpuActive			= 7.6
#**.battery.usageCpuSleep			= 0.237 ## 3.3 mA for IDLE mode, 0.237 mA for Standby



#** = default

**.broadCastDelay=uniform(0s,0.005s)

# manet routing

**.manetrouting.manetmanager.routingProtocol = "AODV"
#**.manetrouting.manetmanager.routingProtocol = "DSR"
#**.manetrouting.manetmanager.routingProtocol = "DYMO"
#**.manetrouting.manetmanager.routingProtocol = "DYMOFAU"
#**.manetrouting.manetmanager.routingProtocol = "OLSR"
#**.manetrouting.manetmanager.routingProtocol = "OLSR_ETX"
#**.manetrouting.manetmanager.routingProtocol = "DSDV"
#**.manetrouting.manetmanager.routingProtocol = "DSDV_2"

#**.routingProtocol = default

#/ parameters : DYMOUM
**.no_path_acc_ = false
**.reissue_rreq_ = false
**.s_bit_ = false
**.hello_ival_ = 0
**.MaxPktSec = 20 #// 10
**.promiscuous = false
**.NetDiameter = 10
**.RouteTimeOut = 3000
**.RouteDeleteTimeOut = 3000*5 #//5*RouteTimeOut
**.RREQWaitTime = 1000
**.RREQTries = 3
**.noRouteBehaviour = 1

 #   //  parameters: AODVUU;
**.log_to_file = false
**.hello_jittering = true
**.optimized_hellos = true
**.expanding_ring_search = true
**.local_repair = true
**.rreq_gratuitous = true
#**.debug = false
**.rt_log_interval = 0
**.unidir_hack = 0
**.internet_gw_mode = 0
**.receive_n_hellos = 1
**.ratelimit = 1000
**.llfeedback = false# //1000 
**.wait_on_reboot = 0
**.active_timeout = 6000 # // time in ms
**.internet_gw_address = "0.0.0.0"

#  //  parameters: DSRUU;
**.PrintDebug = true
**.FlushLinkCache = true
**.PromiscOperation = false
**.UseNetworkLayerAck = false
**.BroadCastJitter = 20 # 20  ms
**.RouteCacheTimeout = 300 #300 seconds
**.SendBufferTimeout = 300# //30 s
**.SendBufferSize = -1
**.RequestTableSize = -1
**.RequestTableIds = -1
**.MaxRequestRexmt = -1 #// 16,
**.MaxRequestPeriod = 10 #//10 SECONDS
**.RequestPeriod = 500 #//500  MILLISECONDS
**.NonpropRequestTimeout = 30# //30  MILLISECONDS
**.RexmtBufferSize = -1 #//MAINT_BUF_MAX_LEN
**.MaintHoldoffTime = 250# //250 MILLISECONDS
**.MaxMaintRexmt = 2 # //2
**.TryPassiveAcks = true #//1
**.PassiveAckTimeout = 100# //100 MILLISECONDS
**.GratReplyHoldOff = 1 #, //1 SECONDS
**.MAX_SALVAGE_COUNT = 15 # //15
**.LifoSize = 20
**.PathCache = true
**.ETX_Active = false
**.ETXHelloInterval = 1 #, // Second
**.ETXWindowNumHello = 10
**.ETXRetryBeforeFail = -1
**.RREPDestinationOnly = false
**.RREQMaxVisit = 5 # // Max Number that a RREQ can be processes by a node

#// Olsr
**.Willingness = 3
**.Hello_ival = 2
**.Tc_ival = 5
**.Mid_ival = 5
**.use_mac = 0 #1
**.Mpr_algorithm = 1
**.routing_algorithm = 1
**.Link_quality = 2
**.Fish_eye = false
**.Tc_redundancy = 3
**.Link_delay = true #//default false
**.C_alpha = 0.2

#// DSDV
**.manetroutingprotocol.hellomsgperiod_DSDV = 1s # //Period of DSDV hello message generation [seconds] 
**.manetroutingprotocol.manetroutingprotocol.timetolive_routing_entry = 5s # // ;[seconds]
**.netmask = "255.255.0.0" # //
**.MaxVariance_DSDV = 1 
**.RNGseed_DSDV = 0


##############################################################################
#       Output vectors                                                       #
##############################################################################
#**.End-to-end delay.vector-recording = true
#**.Mean end-to-end delay.vector-recording = true

##############################################################################
#       mobility                                                             #	
##############################################################################

include MobilityModels_.ini 

