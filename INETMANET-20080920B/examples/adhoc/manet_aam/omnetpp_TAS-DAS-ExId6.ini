[General]
#debug-on-errors = true
cmdenv-event-banner-details = true
cmdenv-express-mode = true
cmdenv-interactive = false
cmdenv-message-trace = true


eventlog-file = ${resultdir}/${configname}-${runnumber}.elog
eventlog-message-detail-pattern = CommonAAM
eventlog-recording-intervals = 0..100
num-rngs = 1

#repeat =2 
repeat =  50

#seed-set = 0
#seed-0-mt = 12356

sim-time-limit = 162000s#7200s # =  3 hours  #1800s #43200 = 12hours  # 10 mintues

network = inet.examples.adhoc.manet_aam.Net_Manet_AAM_Temp_TG


tkenv-plugin-path = ../../../Etc/plugins
#tkenv-default-run = 2

description = "MANETs AAM Model Test"

#total-stack = 131072KB

#**.module-eventlog-recording = false 

**.module-eventlog-recording = false


record-eventlog = false
**.param-record-as-scalar = false
**.vector-record-eventnumbers = false


*.playgroundSizeX = 1500 ##1000
*.playgroundSizeY = 1500##1000

*.numHosts = 500#250 #100 #10 #4 #49 #100  #64 #3
*.numManagers = 6 #1 #5 #4 #5 #1

**.debug = true
#**.coreDebug = false
**.channelNumber = 0

*.AAMDynamicNetworkConfigurator.BronzeCertP = 0.50
*.AAMDynamicNetworkConfigurator.SilverCertP = 0.30
*.AAMDynamicNetworkConfigurator.GoldenCertP = 0.20
*.AAMDynamicNetworkConfigurator.CorCertP = 0.0
*.AAMDynamicNetworkConfigurator.JoinRate = 1 # Lamda 
*.AAMDynamicNetworkConfigurator.arrivalType = 2 #1 : Fixed 2: poisson process
#*.AAMDynamicNetworkConfigurator.positionType = 3 #3 


*.AAMDynamicNetworkConfigurator.ActivateDeleteNode = false #true
*.AAMDynamicNetworkConfigurator.DeleteRate = 0.5  #0.9 50% of SuccAuthN Deletion
*.AAMDynamicNetworkConfigurator.lifetimeMean =  600s #3000s
*.AAMDynamicNetworkConfigurator.lifetimeDistName =  "truncnormal"#"pareto_shifted"#"weibull"# # lifetime distribution function  < weibull, pareto_shifted, truncnormal exponential  >
#*.AAMDynamicNetworkConfigurator.lifetimeDistPar1 = 0.5
*.AAMDynamicNetworkConfigurator.DeletionTypePar = 0 #1 # 0 random , 1 LifeTime distribution 
*.AAMDynamicNetworkConfigurator.GraceLeaveDuration = 30s

*.AAMDynamicNetworkConfigurator.EndSimFlag= true
*.AAMDynamicNetworkConfigurator.finishDelta = uniform(250s,1200s)

#**.userhost[*].udpApp[*].scalar-recording = true
#**.userhost[*].udpApp[*].vector-recording = true
#**.AuthNMAN[*].udpApp[*].scalar-recording = true
#**.AuthNMAN[*].udpApp[*].vector-recording = true
#
#**.**.**.vector-recording = false
#**.**.**.scalar-recording = false 

**.userhost[*].wlan.mac.**.vector-recording = false
**.userhost[*].wlan.radio.**.vector-recording = false
**.AuthNMAN[*].wlan.mac.**.vector-recording = false
**.AuthNMAN[*].wlan.radio.**.vector-recording = false
**.TrafGenSrvHost[*].wlan.mac.**.vector-recording = false
**.TrafGenSrvHost[*].wlan.radio.**.vector-recording = false

#**.AuthNMAN[*].mobility.x = uniform(100, 1400)
#**.AuthNMAN[*].mobility.y = uniform(100, 1400)

#**.AuthNMAN[0].mobility.x =730#245
#**.AuthNMAN[0].mobility.y =730#245 

**.AuthNMAN[0].mobility.x = 500
**.AuthNMAN[0].mobility.y = 250

**.AuthNMAN[1].mobility.x = 1000 #832.84#245
**.AuthNMAN[1].mobility.y = 250 #1332.56#245

**.AuthNMAN[2].mobility.x = 1250
**.AuthNMAN[2].mobility.y = 750

**.AuthNMAN[3].mobility.x =1000
**.AuthNMAN[3].mobility.y =1250

**.AuthNMAN[4].mobility.x = 250
**.AuthNMAN[4].mobility.y = 750

**.AuthNMAN[5].mobility.x = 500
**.AuthNMAN[5].mobility.y = 1250

##########################################   udp apps (Authentication Process) #######################

**.userhost[*].numUdpApps = 1
**.AuthNMAN[*].numUdpApps=1

**.userhost[*].udpApp[*].EnabledMigr = false #true
**.userhost[*].udpApp[*].WaitingWindowEnable = true #false
**.userhost[*].udpApp[*].DisconnectFlag = false
**.userhost[*].udpApp[*].TriggerTraffic = true
**.userhost[*].udpApp[*].SearchForConnection = true
**.userhost[*].udpApp[*].SetMobilModOn = true #false

**.userhost[*].udpApp[*].DeleteToFail = true
**.userhost[*].udpApp[*].SetNodeLifeTime = true



**.userhost[*].udpAppType = "AuthNAgent"
**.userhost[*].udpApp[*].AuthNMANAddr = "AuthNMAN[0]"  #"Broadcast" 
#**.userhost[*].udpApp[*].AuthNMANThreAddr = "AuthNMAN[1] AuthNMAN[2] AuthNMAN[3] AuthNMAN[4]" 
**.userhost[*].udpApp[*].AuthNMANThreAddr = "AuthNMAN[0] AuthNMAN[1] AuthNMAN[2] AuthNMAN[3] AuthNMAN[4] AuthNMAN[5]" 
**.userhost[*].udpApp[*].disableCAS   = true # for the case of TAS+DAS only 

**.userhost[*].udpApp[*].ThresholdServer = 3 #3 # Number of Servers required thier reply to create Attribute Certificate
**.userhost[*].udpApp[*].TotalNumServers = 6 #5 #5 

**.userhost[*].udpApp[*].strategyType = 0 #1  # 0 : call All server Avaible , call available in sequence ( root => Thresh => Delegated) 
**.userhost[*].udpApp[*].SetTAStoDAS = true # false # Separation TAD and DAs Service call 
#**.userhost[*].udpApp[*].StMin = true

**.userhost[*].udpApp[*].localAuthnAgentPort = 9999
**.userhost[*].udpApp[*].AuthnManPort = 3088

**.userhost[*].udpApp[*].time_begin = 0.05s # 2.2s#uniform(200s, 500s) # 500s Think time
**.userhost[*].udpApp[*].messageLength = 1100B #2048B # size of Request having memebership identity certificate 

**.userhost[*].udpApp[*].GeneratorSeed = 0 # uniform(0,3)
**.userhost[*].udpApp[*].AWaitInterval = 30s #uniform(30s, 60s) #uniform(1s, 3s)
**.userhost[*].udpApp[*].MaxReAuthNCounter = 3 #1 #3
**.userhost[*].udpApp[*].Fix_Exp_WT = 1 #0: fixed , 1: exponential

**.userhost[*].udpApp[*].SrvTypeOptions = 3 #4 #3 #  1: RootServer 2: Threshold Server 3: Root && Threshold with DAS 4:Root && Threshold without DAS
**.userhost[*].udpApp[*].AuthenticationType = 3 # 1:One , 2:Two, 3:Three Way Pass Authentication



# Traffic Host Generator Module parameter 
**.userhost[*].TraffGenHostMan.MultiNumNum = 1 
**.userhost[*].TraffGenHostMan.SingOrMultiSrv = true #false 
**.userhost[*].TraffGenHostMan.WaitingEnable  = true 
**.userhost[*].TraffGenHostMan.MaxReqNum= 3


  
**.AuthNMAN*.udpAppType = "AuthNManager"
#**.AuthNMAN*.udpApp[*].verifyingTime =  uniform(1s,3s) #uniform(0.01s, 0.03s)
**.AuthNMAN*.udpApp[*].localAuthnManPort = 3088
**.AuthNMAN[*].udpApp[*].MaxThreads = 1

**.AuthNMAN[*].udpApp[*].SrvTypeOptions = 3 #2 #1  #  1: RootServer 2: Threshold Server 3:  Threshold/Delegated
#**.AuthNMAN[0].udpApp[*].AuthorityServerType = 1
**.AuthNMAN[*].udpApp[*].AuthorityServerType = 2 # 1:RootAuthority , 2:Threshold Authority , Threshold and Delegated Authority
**.AuthNMAN[*].udpApp[*].SepTASfDAS = true #false


# app Trafffic Generator 

#**.AuthNMAN[0].trafGenType = "IPTrafSink"
#**.AuthNMAN[*].trafGenType = "IPTrafGen"
#
#**.AuthNMAN[*].trafGen.startTime 		= 0s
#**.AuthNMAN[*].trafGen.packetInterval 	= 0.1ms
#**.AuthNMAN[*].trafGen.numPackets 		= 1000
#**.AuthNMAN[*].trafGen.protocol 		= 6
#**.AuthNMAN[*].trafGen.packetLength 	= 800B


*.numTaffGen= 2 #1 

**.TrafGenSrvHost[0].mobility.x = 750
**.TrafGenSrvHost[0].mobility.y = 380
**.TrafGenSrvHost[1].mobility.x = 750
**.TrafGenSrvHost[1].mobility.y = 1080

#**.TrafGenHost[0].trafGenType = "IPTrafSink"
#**.TrafGenHost[*].trafGenType = "IPTrafGen"
#**.TrafGenHost[*].trafGen.startTime 		= 1s
#**.TrafGenHost[*].trafGen.packetInterval 	= 0.1s
#**.TrafGenHost[*].trafGen.numPackets 		= 10000
#**.TrafGenHost[*].trafGen.protocol 			= 6 # 17
#**.TrafGenHost[*].trafGen.packetLength 		= 800B
#**.TrafGenHost[*].trafGen.destAddresses = "TrafGenHost[0]"
#**.TrafGenHost[0].trafGenType = "TrafGenPar"

**.TrafGenSrvHost[*].TraffGenSrMan.interDepartureTime = 0.2s # 2.5KB/s  # exponential(1s);  
**.TrafGenSrvHost[*].TraffGenSrMan.packetSize = 512B

**.TrafGenSrvHost[*].TraffGenSrMan.firstPacketTime 	  = 0.05s

**.TrafGenSrvHost[*].TraffGenSrMan.onLength 		  = 5s #uniform(0.01s,3s)	#  exponential (315ms)
**.TrafGenSrvHost[*].TraffGenSrMan.offLength 		  = 0s#uniform(1s,5s)     #  exponential (325ms)

**.TrafGenSrvHost[*].TraffGenSrMan.prsumSessionlength = uniform(1000s,6000s)

**.TrafGenSrvHost[*].TraffGenSrMan.TrafPatType = 1
**.TrafGenSrvHost[*].TraffGenSrMan.MaxFlowNum = 50 # 50 Flows ==> 50 * 512 = 25KB 


#**.TrafGenHost[*].trafGen.offInterDepartureTime = 200s

# ping app (host[0] pinged by others)
# ping app (off)
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56B
**.pingApp.interval = 1s
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.stopTime = 0
**.pingApp.printPing = true

#*.fixhost[0].pingApp.destAddr = ""
#*.host[*].pingApp.destAddr = "fixhost[0]"
#**.pingApp.srcAddr = ""
#**.pingApp.packetSize = 56
#**.pingApp.interval = 1
#**.pingApp.hopLimit = 32
#**.pingApp.count = 0
#**.pingApp.startTime = uniform(1,5)
#**.pingApp.stopTime = 0
#**.pingApp.printPing = true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true

# ip settings
**.routingFile = ""
**.ip.procDelay = 10us
**.ip.forceBroadcast = true
# **.IPForward = false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
#**.networklayer.proxyARP = true  # Host's is hardwired "false"




# nic settings
#**.wlan.mgmt.frameCapacity = 10
#**.wlan.mgmt.Willingness = 3
#**.wlan.mgmt.Hello_ival = 2
#**.wlan.mgmt.Tc_ival = 5
#**.wlan.mgmt.Mid_ival = 5
#**.wlan.mgmt.use_mac = false



# nic settings
**.wlan.mgmt.frameCapacity 		= 10
**.wlan.mac.address 			= "auto"
**.wlan.mac.maxQueueSize 		= 14
**.wlan.mac.rtsThresholdBytes 	= 3000B
**.wlan.mac.bitrate 			= 54Mbps
**.wlan.mac.basicBitrate 		= 6Mbps  # 24Mbps
**.wlan.mac.retryLimit 			= 7
**.wlan.mac.cwMinData 			= 31
**.wlan.mac.cwMinBroadcast 		= 31
**.wlan.mac.opMode 				= 2 # 802.11g
**.wlan.mac.slotTime 			= 9us #
**.wlan.mac.AIFSN 				= 2 #DIFS


**.wlan.radio.transmitterPower 	= 1.0mW
**.wlan.radio.pathLossAlpha 	= 2
**.wlan.radio.snirThreshold 	= 10dB #24.6dB# # in dB
**.wlan.radio.bitrate 			= 54Mbps 		
**.wlan.radio.thermalNoise 		= -110dBm 
**.wlan.radio.sensitivity 		= -83.5678 dBm #-77.54722dBm #-83.5678 dBm  # -90 #-85 	#-80dBm #


**.wlan.radio.phyOpMode 		= 2 #1/2  802.11b/802.11g-only
**.wlan.radio.channelModel 		= 1 #1/2  rayleigh/awgn
**.wlan.radio.berTableFile 		= "per_table_80211g_Trivellato.dat"


# channel physical parameters ## -83.5678 dBm ==>  150m Range , -77.54722dBm ==> 75m  Range -80.0460 ===> 100m
*.channelcontrol.carrierFrequency 	= 2.4GHz
*.channelcontrol.pMax 				= 1.0mW
*.channelcontrol.sat 				= -83.5678 dBm # -85dBm  
*.channelcontrol.alpha 				= 2
*.channelcontrol.numChannels 		= 1
#*.channelcontrol.propagationModel = "RayleighModel"#"TwoRayGroundModel"
# "TwoRayGroundModel","RiceModel","RayleighModel","NakagamiModel","FreeSpaceModel","LogNormalShadowingModel");
# mA for power consumption for radio 

#**.wlan.radio.usage_radio_send  = 22mA 
#**.wlan.radio.usage_radio_recv  = 7mA 
#**.wlan.radio.usage_radio_idle  = 5mA 
#**.wlan.radio.usage_radio_sleep = 0.1mA


**.wlan.radio.usage_radio_send  = 660mA 
**.wlan.radio.usage_radio_recv  = 395mA 
**.wlan.radio.usage_radio_idle  = 296mA 
**.wlan.radio.usage_radio_sleep = 100mA



##############################################################################
#       Parameters for the Energy Model (units: mAh and mA)                  #
##############################################################################
#**.battery.nominal =  uniform(0.1,10)
#**.battery.capacity = uniform(0.1,10)

**.battery.nominal =  100
**.battery.capacity = 98

**.battery.voltage = 20
**.battery.resolution = 0.5s
**.battery.publishDelta = 0.5
**.battery.publishTime = 1s
**.battery.ConsumedVector= true
#**.battery.scalar-recording = true

##############################################################################
#       Parameters for the Energy Model (units: mAh and mA)                  #
#	Calibrated according to CC2420 radio
##############################################################################
#**.battery.batteryCapacity			 = 25	#[mAh]
#**.battery.meanTimeToFailure		 = -1s
#**.battery.usage_radio_idle			 = 0.37mA	#[mA] 1.38 for CC1000
#**.battery.usage_radio_recv			 = 19.47mA	#[mA] 9.6 for CC1000
#**.battery.usage_radio_sleep		 = 0.02mA	#[mA] 0.06 for CC1000
#**.battery.transmitterPower			 = 1.0mW	#[mW]
#**.battery.usageCpuActive			= 7.6
#**.battery.usageCpuSleep			= 0.237 ## 3.3 mA for IDLE mode, 0.237 mA for Standby



#** = default

**.broadCastDelay=uniform(0s,0.005s)

# manet routing

**.manetrouting.manetmanager.routingProtocol = "AODV"
#**.manetrouting.manetmanager.routingProtocol = "DSR"
#**.manetrouting.manetmanager.routingProtocol = "DYMO"
#**.manetrouting.manetmanager.routingProtocol = "DYMOFAU"
#**.manetrouting.manetmanager.routingProtocol = "OLSR"
#**.manetrouting.manetmanager.routingProtocol = "OLSR_ETX"
#**.manetrouting.manetmanager.routingProtocol = "DSDV"
#**.manetrouting.manetmanager.routingProtocol = "DSDV_2"

#**.routingProtocol = default

#/ parameters : DYMOUM
**.no_path_acc_ = false
**.reissue_rreq_ = false
**.s_bit_ = false
**.hello_ival_ = 0
**.MaxPktSec = 20 #// 10
**.promiscuous = false
**.NetDiameter = 10
**.RouteTimeOut = 3000
**.RouteDeleteTimeOut = 3000*5 #//5*RouteTimeOut
**.RREQWaitTime = 1000
**.RREQTries = 3
**.noRouteBehaviour = 1

 #   //  parameters: AODVUU;
**.log_to_file = false
**.hello_jittering = true
**.optimized_hellos = true
**.expanding_ring_search = true
**.local_repair = true
**.rreq_gratuitous = true
#**.debug = false
**.rt_log_interval = 0
**.unidir_hack = 0
**.internet_gw_mode = 0
**.receive_n_hellos = 1
**.ratelimit = 1000
**.llfeedback = false# //1000 
**.wait_on_reboot = 0
**.active_timeout = 6000 # // time in ms
**.internet_gw_address = "0.0.0.0"

#  //  parameters: DSRUU;
**.PrintDebug = true
**.FlushLinkCache = true
**.PromiscOperation = false
**.UseNetworkLayerAck = false
**.BroadCastJitter = 20 # 20  ms
**.RouteCacheTimeout = 300 #300 seconds
**.SendBufferTimeout = 300# //30 s
**.SendBufferSize = -1
**.RequestTableSize = -1
**.RequestTableIds = -1
**.MaxRequestRexmt = -1 #// 16,
**.MaxRequestPeriod = 10 #//10 SECONDS
**.RequestPeriod = 500 #//500  MILLISECONDS
**.NonpropRequestTimeout = 30# //30  MILLISECONDS
**.RexmtBufferSize = -1 #//MAINT_BUF_MAX_LEN
**.MaintHoldoffTime = 250# //250 MILLISECONDS
**.MaxMaintRexmt = 2 # //2
**.TryPassiveAcks = true #//1
**.PassiveAckTimeout = 100# //100 MILLISECONDS
**.GratReplyHoldOff = 1 #, //1 SECONDS
**.MAX_SALVAGE_COUNT = 15 # //15
**.LifoSize = 20
**.PathCache = true
**.ETX_Active = false
**.ETXHelloInterval = 1 #, // Second
**.ETXWindowNumHello = 10
**.ETXRetryBeforeFail = -1
**.RREPDestinationOnly = false
**.RREQMaxVisit = 5 # // Max Number that a RREQ can be processes by a node

#// Olsr
**.Willingness = 3
**.Hello_ival = 2
**.Tc_ival = 5
**.Mid_ival = 5
**.use_mac = 0 #1
**.Mpr_algorithm = 1
**.routing_algorithm = 1
**.Link_quality = 2
**.Fish_eye = false
**.Tc_redundancy = 3
**.Link_delay = true #//default false
**.C_alpha = 0.2

#// DSDV
**.manetroutingprotocol.hellomsgperiod_DSDV = 1s # //Period of DSDV hello message generation [seconds] 
**.manetroutingprotocol.manetroutingprotocol.timetolive_routing_entry = 5s # // ;[seconds]
**.netmask = "255.255.0.0" # //
**.MaxVariance_DSDV = 1 
**.RNGseed_DSDV = 0


##############################################################################
#       Output vectors                                                       #
##############################################################################
#**.End-to-end delay.vector-recording = true
#**.Mean end-to-end delay.vector-recording = true

##############################################################################
#       mobility                                                             #	
##############################################################################

include MobilityModels_.ini 

